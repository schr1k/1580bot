services:
    1580_postgres:
        container_name:
            1580_postgres
        image:
            postgres:17-alpine
        ports:
            - "127.0.0.1:5433:${POSTGRES_PORT}"
        restart:
            unless-stopped
        volumes:
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
            - 1580_postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        env_file:
            - path: .env
              required: true
        healthcheck:
            test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        deploy:
            resources:
                limits:
                    cpus: "1"
                    memory: 1000M
    1580_redis:
        container_name:
            1580_redis
        image:
            redis:7-alpine
        ports:
            - "127.0.0.1:6380:${REDIS_PORT}"
        restart:
            unless-stopped
        volumes:
            - 1580_redis_data:/var/lib/redis/data
        env_file:
            - path: .env
              required: true
        healthcheck:
            test: [ "CMD-SHELL", "redis-cli PING | grep PONG" ]
            interval: 60s
            timeout: 5s
            retries: 5
            start_period: 10s
        deploy:
            resources:
                limits:
                    cpus: "1"
                    memory: 1000M
    bot:
        container_name:
            1580_bot
        build:
            context:
                .
            dockerfile:
                Dockerfile
        restart:
            unless-stopped
        depends_on:
            - 1580_redis
            - 1580_postgres
        develop:
            watch:
                - action: sync+restart
                  path: .
                  target: /app
        deploy:
            resources:
                limits:
                    cpus: "2"
                    memory: 2000M
volumes:
    1580_postgres_data:
    1580_redis_data:
